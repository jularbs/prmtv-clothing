{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ralph\\\\Dev\\\\prmtv-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux'; //PRE- REDUX THUNK CODE\n// import{ updateCollections } from '../../redux/shop/shop.actions.js';\n//REDUX THUNK CODE\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors'; // import CollectionsOverview from '../../components/collections-overview/collections-overview.component'; REMOVED BY REFACTORING CONATINER PATTERN\n\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/withSpinner/with-spinner.component'; //PRE- REDUX THUNK CODE\n// import { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'; \n//Container Patter\n\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container'; // const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);  REMOVED BY REFACTORING COLLECTIONS OVERVIEW CONTAINER\n\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  //PRE- REDUX THUNK CODE\n  // state = {\n  //   loading: true\n  // };\n  //PRE- REDUX THUNK CODE\n  // unsubscribeFromSnapshot = null;\n  componentDidMount() {\n    //PRE- REDUX THUNK CODE\n    // const { updateCollections } = this.props;\n    // const collectionRef = firestore.collection('collections');\n    // collectionRef.onSnapshot(async snapshot => {\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //   updateCollections(collectionsMap);\n    //   this.setState({ loading : false });\n    // });\n    //REDUX THUNK CODE\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionsLoaded\n    } = this.props; //PRE- REDUX THUNK CODE\n    // const { loading } = this.state;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}` // render={(props) => \n      //   <CollectionsOverviewWithSpinner \n      //     isLoading={isCollectionFetching} \n      //     {...props} \n      //   />} REMOVED BY REFACTORING WITH CONTAINER PATTER\n      ,\n      component: CollectionsOverviewContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsPageWithSpinner, Object.assign({\n        isLoading: !isCollectionsLoaded\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\n; //REDUX THUNK CODE\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  //PRE REDUX THUNK CODE\n  // updateCollections: collectionsMap => \n  //   dispatch(updateCollections(collectionsMap))\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/ralph/Dev/prmtv-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","fetchCollectionsStartAsync","createStructuredSelector","selectIsCollectionsLoaded","CollectionPage","WithSpinner","CollectionsOverviewContainer","CollectionsPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionsLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;AACA;AAEA;;AACA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,yBAAT,QAA0C,iCAA1C,C,CAEA;;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,WAAP,MAAwB,qDAAxB,C,CAEE;AACF;AAEA;;AACA,OAAOC,4BAAP,MAAyC,sEAAzC,C,CAEA;;AACA,MAAMC,0BAA0B,GAAGF,WAAW,CAACD,cAAD,CAA9C;;AAGA,MAAMI,QAAN,SAAuBV,KAAK,CAACW,SAA7B,CAAuC;AAErC;AACA;AACA;AACA;AAEA;AACA;AAEAC,EAAAA,iBAAiB,GAAG;AAChB;AACF;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA,UAAM;AAAET,MAAAA;AAAF,QAAiC,KAAKU,KAA5C;AACAV,IAAAA,0BAA0B;AAC3B;;AAEDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAiC,KAAKH,KAA5C,CADO,CAEP;AACA;;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AACE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EADtB,CAEE;AACA;AACA;AACA;AACA;AANF;AAOE,MAAA,SAAS,EAAET,4BAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAUE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEO,KAAK,CAACE,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAGJ,KAAD,iBACN,oBAAC,0BAAD;AACE,QAAA,SAAS,EAAE,CAACG;AADd,SAEMH,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF;AAqBD;;AAnDoC;;AAqDtC,C,CAED;;AACA,MAAMK,eAAe,GAAGd,wBAAwB,CAAC;AAC/CY,EAAAA,mBAAmB,EAAEX;AAD0B,CAAD,CAAhD;;AAIA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAK;AACtC;AACA;AACA;AAEAjB,EAAAA,0BAA0B,EAAE,MAAMiB,QAAQ,CAACjB,0BAA0B,EAA3B;AALJ,CAAL,CAAnC;;AAQA,eAAeD,OAAO,CAACgB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n//PRE- REDUX THUNK CODE\r\n// import{ updateCollections } from '../../redux/shop/shop.actions.js';\r\n\r\n//REDUX THUNK CODE\r\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions'; \r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\r\n\r\n// import CollectionsOverview from '../../components/collections-overview/collections-overview.component'; REMOVED BY REFACTORING CONATINER PATTERN\r\nimport CollectionPage from '../collection/collection.component';\r\nimport WithSpinner from '../../components/withSpinner/with-spinner.component';\r\n\r\n  //PRE- REDUX THUNK CODE\r\n// import { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'; \r\n\r\n//Container Patter\r\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\r\n\r\n// const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);  REMOVED BY REFACTORING COLLECTIONS OVERVIEW CONTAINER\r\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\n\r\nclass ShopPage extends React.Component {\r\n  \r\n  //PRE- REDUX THUNK CODE\r\n  // state = {\r\n  //   loading: true\r\n  // };\r\n\r\n  //PRE- REDUX THUNK CODE\r\n  // unsubscribeFromSnapshot = null;\r\n\r\n  componentDidMount() {\r\n      //PRE- REDUX THUNK CODE\r\n    // const { updateCollections } = this.props;\r\n    // const collectionRef = firestore.collection('collections');\r\n \r\n    // collectionRef.onSnapshot(async snapshot => {\r\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n    //   updateCollections(collectionsMap);\r\n    //   this.setState({ loading : false });\r\n    // });\r\n\r\n    //REDUX THUNK CODE\r\n    const { fetchCollectionsStartAsync } = this.props;\r\n    fetchCollectionsStartAsync();\r\n  }\r\n\r\n  render() {\r\n    const { match, isCollectionsLoaded } = this.props;\r\n    //PRE- REDUX THUNK CODE\r\n    // const { loading } = this.state;\r\n    return (\r\n      <div className='shop-page'>\r\n        <Route exact \r\n          path={`${match.path}`} \r\n          // render={(props) => \r\n          //   <CollectionsOverviewWithSpinner \r\n          //     isLoading={isCollectionFetching} \r\n          //     {...props} \r\n          //   />} REMOVED BY REFACTORING WITH CONTAINER PATTER\r\n          component={CollectionsOverviewContainer}\r\n        />\r\n        <Route \r\n          path={`${match.path}/:collectionId`} \r\n          render={(props) => \r\n            <CollectionsPageWithSpinner \r\n              isLoading={!isCollectionsLoaded} \r\n              {...props} \r\n            />}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  \r\n};\r\n\r\n//REDUX THUNK CODE\r\nconst mapStateToProps = createStructuredSelector({\r\n  isCollectionsLoaded: selectIsCollectionsLoaded\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  //PRE REDUX THUNK CODE\r\n  // updateCollections: collectionsMap => \r\n  //   dispatch(updateCollections(collectionsMap))\r\n\r\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}