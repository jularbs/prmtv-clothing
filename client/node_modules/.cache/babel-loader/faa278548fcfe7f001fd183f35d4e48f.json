{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ralph\\\\Dev\\\\prmtv-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux'; //PRE- REDUX THUNK CODE\n// import{ updateCollections } from '../../redux/shop/shop.actions.js';\n//REDUX THUNK CODE\n\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions'; // import { createStructuredSelector } from 'reselect';\n// import { selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors'; <<REMOVED BY REFACTORING\n// import CollectionsOverview from '../../components/collections-overview/collections-overview.component'; REMOVED BY REFACTORING CONATINER PATTERN\n// import CollectionPage from '../collection/collection.component';\n// import WithSpinner from '../../components/withSpinner/with-spinner.component'; REFACTORED\n//PRE- REDUX THUNK CODE\n// import { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'; \n//Container Patter\n\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPageContainer from '../../pages/collection/collection.container'; // const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);  REMOVED BY REFACTORING COLLECTIONS OVERVIEW CONTAINER\n// const CollectionsPageWithSpinner = WithSpinner(CollectionPage); REFACTORED\n\nclass ShopPage extends React.Component {\n  //PRE- REDUX THUNK CODE\n  // state = {\n  //   loading: true\n  // };\n  //PRE- REDUX THUNK CODE\n  // unsubscribeFromSnapshot = null;\n  componentDidMount() {\n    //PRE- REDUX THUNK CODE\n    // const { updateCollections } = this.props;\n    // const collectionRef = firestore.collection('collections');\n    // collectionRef.onSnapshot(async snapshot => {\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //   updateCollections(collectionsMap);\n    //   this.setState({ loading : false });\n    // });\n    //REDUX THUNK CODE\n    const {\n      fetchCollectionsStart\n    } = this.props;\n    fetchCollectionsStart();\n  }\n\n  render() {\n    const {\n      match\n    } = this.props; //PRE- REDUX THUNK CODE\n    // const { loading } = this.state;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}` // render={(props) => \n      //   <CollectionsOverviewWithSpinner \n      //     isLoading={isCollectionFetching} \n      //     {...props} \n      //   />} REMOVED BY REFACTORING WITH CONTAINER PATTER\n      ,\n      component: CollectionsOverviewContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId` // render={(props) => \n      //   <CollectionsPageWithSpinner \n      //     isLoading={!isCollectionsLoaded} \n      //     {...props} \n      //   />} REFACTORED\n      ,\n      component: CollectionPageContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\n; //REDUX THUNK CODE\n// const mapStateToProps = createStructuredSelector({\n//   isCollectionsLoaded: selectIsCollectionsLoaded\n// }) <<< REMOVED BY REFACTORING\n\nconst mapDispatchToProps = dispatch => ({\n  //PRE REDUX THUNK CODE\n  // updateCollections: collectionsMap => \n  //   dispatch(updateCollections(collectionsMap))\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/ralph/Dev/prmtv-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","fetchCollectionsStart","CollectionsOverviewContainer","CollectionPageContainer","ShopPage","Component","componentDidMount","props","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;AACA;AAEA;;AACA,SAASC,qBAAT,QAAsC,+BAAtC,C,CACA;AACA;AAEA;AACA;AACA;AAEE;AACF;AAEA;;AACA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,uBAAP,MAAoC,6CAApC,C,CAEA;AACA;;AAGA,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAuC;AAErC;AACA;AACA;AACA;AAEA;AACA;AAEAC,EAAAA,iBAAiB,GAAG;AAChB;AACF;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA,UAAM;AAAEL,MAAAA;AAAF,QAA4B,KAAKM,KAAvC;AACAN,IAAAA,qBAAqB;AACtB;;AAEDO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKF,KAAvB,CADO,CAEP;AACA;;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AACE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACC,IAAK,EADtB,CAEE;AACA;AACA;AACA;AACA;AANF;AAOE,MAAA,SAAS,EAAER,4BAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAUE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEO,KAAK,CAACC,IAAK,gBADtB,CAEE;AACA;AACA;AACA;AACA;AANF;AAOE,MAAA,SAAS,EAAEP,uBAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF;AAsBD;;AApDoC;;AAsDtC,C,CAED;AACA;AACA;AACA;;AAEA,MAAMQ,kBAAkB,GAAGC,QAAQ,KAAK;AACtC;AACA;AACA;AAEAX,EAAAA,qBAAqB,EAAE,MAAMW,QAAQ,CAACX,qBAAqB,EAAtB;AALC,CAAL,CAAnC;;AAQA,eAAeD,OAAO,CAAC,IAAD,EAAOW,kBAAP,CAAP,CAAkCP,QAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n//PRE- REDUX THUNK CODE\r\n// import{ updateCollections } from '../../redux/shop/shop.actions.js';\r\n\r\n//REDUX THUNK CODE\r\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions'; \r\n// import { createStructuredSelector } from 'reselect';\r\n// import { selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors'; <<REMOVED BY REFACTORING\r\n\r\n// import CollectionsOverview from '../../components/collections-overview/collections-overview.component'; REMOVED BY REFACTORING CONATINER PATTERN\r\n// import CollectionPage from '../collection/collection.component';\r\n// import WithSpinner from '../../components/withSpinner/with-spinner.component'; REFACTORED\r\n\r\n  //PRE- REDUX THUNK CODE\r\n// import { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'; \r\n\r\n//Container Patter\r\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\r\nimport CollectionPageContainer from '../../pages/collection/collection.container';\r\n\r\n// const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);  REMOVED BY REFACTORING COLLECTIONS OVERVIEW CONTAINER\r\n// const CollectionsPageWithSpinner = WithSpinner(CollectionPage); REFACTORED\r\n\r\n\r\nclass ShopPage extends React.Component {\r\n  \r\n  //PRE- REDUX THUNK CODE\r\n  // state = {\r\n  //   loading: true\r\n  // };\r\n\r\n  //PRE- REDUX THUNK CODE\r\n  // unsubscribeFromSnapshot = null;\r\n\r\n  componentDidMount() {\r\n      //PRE- REDUX THUNK CODE\r\n    // const { updateCollections } = this.props;\r\n    // const collectionRef = firestore.collection('collections');\r\n \r\n    // collectionRef.onSnapshot(async snapshot => {\r\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n    //   updateCollections(collectionsMap);\r\n    //   this.setState({ loading : false });\r\n    // });\r\n\r\n    //REDUX THUNK CODE\r\n    const { fetchCollectionsStart } = this.props;\r\n    fetchCollectionsStart();\r\n  }\r\n\r\n  render() {\r\n    const { match } = this.props;\r\n    //PRE- REDUX THUNK CODE\r\n    // const { loading } = this.state;\r\n    return (\r\n      <div className='shop-page'>\r\n        <Route exact \r\n          path={`${match.path}`} \r\n          // render={(props) => \r\n          //   <CollectionsOverviewWithSpinner \r\n          //     isLoading={isCollectionFetching} \r\n          //     {...props} \r\n          //   />} REMOVED BY REFACTORING WITH CONTAINER PATTER\r\n          component={CollectionsOverviewContainer}\r\n        />\r\n        <Route \r\n          path={`${match.path}/:collectionId`} \r\n          // render={(props) => \r\n          //   <CollectionsPageWithSpinner \r\n          //     isLoading={!isCollectionsLoaded} \r\n          //     {...props} \r\n          //   />} REFACTORED\r\n          component={CollectionPageContainer}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  \r\n};\r\n\r\n//REDUX THUNK CODE\r\n// const mapStateToProps = createStructuredSelector({\r\n//   isCollectionsLoaded: selectIsCollectionsLoaded\r\n// }) <<< REMOVED BY REFACTORING\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  //PRE REDUX THUNK CODE\r\n  // updateCollections: collectionsMap => \r\n  //   dispatch(updateCollections(collectionsMap))\r\n\r\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}