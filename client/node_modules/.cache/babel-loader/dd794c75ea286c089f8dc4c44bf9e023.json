{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\nimport UserActionTypes from './user.types';\nexport function* getSnapshotFromUserAuth(user) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmailAndPassword({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmailAndPassword);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n;\nexport function* signOutUser() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOutUser);\n}\nexport function* signUpUserWithEmailPassword({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n  } catch (error) {\n    put(signUpFailure(error));\n  }\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUpUserWithEmailPassword);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["C:/Users/ralph/Dev/prmtv-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","UserActionTypes","getSnapshotFromUserAuth","user","userRef","userSnapshot","get","id","data","error","signInWithGoogle","signInWithPopup","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmailAndPassword","payload","email","password","onEmailSignInStart","EMAIL_SIGN_IN_START","isUserAuthenticated","userAuth","onCheckUserSession","CHECK_USER_SESSION","signOutUser","signOut","onSignOutStart","SIGN_OUT_START","signUpUserWithEmailPassword","displayName","createUserWithEmailAndPassword","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\n\r\nimport { \r\n    auth, \r\n    googleProvider, \r\n    createUserProfileDocument,\r\n    getCurrentUser \r\n} from '../../firebase/firebase.utils';\r\n\r\nimport { \r\n    signInSuccess, \r\n    signInFailure,\r\n    signOutSuccess,\r\n    signOutFailure, \r\n    signUpSuccess,\r\n    signUpFailure\r\n} from './user.actions';\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\nexport function* getSnapshotFromUserAuth(user){\r\n    try{\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n    }catch(error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signInWithGoogle(){\r\n    try{\r\n        const {user} = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapshotFromUserAuth(user);\r\n    }catch(error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\n\r\nexport function* signInWithEmailAndPassword({payload: {email, password}}){\r\n    try{\r\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n        yield getSnapshotFromUserAuth(user);\r\n    }catch(error){\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmailAndPassword)\r\n}\r\n\r\nexport function* isUserAuthenticated(){\r\n    try{\r\n        const userAuth = yield getCurrentUser();\r\n        if(!userAuth) return;\r\n        yield getSnapshotFromUserAuth(userAuth);\r\n    }catch(error){\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\r\n};\r\n\r\nexport function* signOutUser(){\r\n    try{\r\n        yield auth.signOut();\r\n        yield put(signOutSuccess());\r\n    }catch(error){\r\n        yield put(signOutFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOutUser);\r\n}\r\n\r\nexport function* signUpUserWithEmailPassword({payload: {email, password, displayName }}){   \r\n    try {\r\n        const { user } = yield auth.createUserWithEmailAndPassword(email, password);\r\n    } catch (error) {\r\n        put(signUpFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUpUserWithEmailPassword);\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onEmailSignInStart),\r\n        call(onCheckUserSession),\r\n        call(onSignOutStart),\r\n        call(onSignUpStart)\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}